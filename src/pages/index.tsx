import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import Image from "next/image";
import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
dayjs.extend(relativeTime)
import { RouterOutputs, api } from "~/utils/api";
import { Loading, LoadingPage } from "~/components/Loading";
const CreatePostWizard = () => {
  const user = useUser();
  if (!user) return null;
  return (
    <div className="flex gap-4 w-full" >
      <Image src={user.user!.profileImageUrl} alt="Profile pic" className="rounded-full" width={56} height={56} />
      <input type="text" placeholder="Put Some Emoji!" className="bg-transparent grow outline-none" ></input>
    </div>
  )
}
type PostViewProps = RouterOutputs["posts"]["getAll"][number]
const PostView = (props: PostViewProps) => {
  const { post, author } = props;
  return (
    <div className="flex px-1 py-3 gap-4 border border-slate-300" >
      <div>
        <Image src={author.profileImageUrl} alt="Profile pic" className="rounded-full" width={56} height={56} />
      </div>
      <div key={post.id} className="flex flex-col ">
        <div className="flex gap-2">
          <div>{`@${author.username ?? ""}`}</div>
          <div>&apos;</div>
          <div>{dayjs(post.createdAt).fromNow()}</div>
        </div>
        <div className="text-2xl">
          {post.content}
        </div>
      </div>
    </div>
  )
}
const Feed = () => {
  const { data: posts, isLoading: feedIsLoading } = api.posts.getAll.useQuery()
  if (feedIsLoading) return <div className="flex w-full h-screen justify-center items-center " >
    <Loading></Loading>
  </div>
  return (
    <div className="flex flex-col" >
      {[...posts!, ...posts!]?.map((post) => <PostView {...post} key={post.post.id} />)}
    </div>
  )
}
const Home: NextPage = () => {
  const { isLoaded, isSignedIn } = useUser();
  // console.log(user);
  if (!isLoaded) return <LoadingPage size={70}></LoadingPage>
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex justify-center h-screen">
        <div className="border-slate-200 border-x w-full md:max-w-3xl">
          <div className="border-b-slate-200 border-b p-2">
            {isSignedIn ? <CreatePostWizard></CreatePostWizard> : <SignInButton></SignInButton>}
          </div>
          <Feed></Feed>
        </div>
      </main>
    </>
  );
};

export default Home;
